-- To execute this make file, type;
--    gprbuild -Pmake_all.gpr

aggregate project Deepend is

   type Ada_Standard is
      ("Ada95", "Ada2005", "Ada2012", "Ada2022", "All");
   Ada_Version : Ada_Standard := external ("DEEPEND_ADA_STANDARD", "Ada2012");

   type Pool_Variant is
      ("Basic", "Subpools", "All");
   Variant : Pool_Variant := external ("DEEPEND_POOL_VARIANT", "Subpools");

   type Storage_Bounds is
      ("Bounded", "Unbounded", "All");
   Bounds : Storage_Bounds := external ("DEEPEND_STORAGE_BOUNDS", "Bounded");

   package Builder is
     for Switches (others) use ("-jc1", "-jb0", "-jl0");
   end  Builder;

   case Ada_Version is

      when "Ada95" =>
      
         case Variant is
            when "Basic" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/bounded_binary_trees_ada95.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/binary_trees_ada95.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/nosubpools/binary_trees_ada95.gpr");
               end case;
               
            when "Subpools" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./95/test/subpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./95/test/subpools/binary_trees_ada95.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./95/test/subpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/subpools/binary_trees_ada95.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr");
               end case;

            when "All" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./95/test/subpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/bounded_binary_trees_ada95.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./95/test/subpools/binary_trees_ada95.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/binary_trees_ada95.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./95/test/subpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/subpools/binary_trees_ada95.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/nosubpools/binary_trees_ada95.gpr");
               end case;                        
         end case;
           
      when "Ada2005" =>
         case Variant is

            when "Basic" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/bounded_binary_trees_ada2005.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2005/test/test_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/binary_trees_ada2005.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/nosubpools/binary_trees_ada2005.gpr");
               end case;

            when "Subpools" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2005/test/subpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2005/test/subpools/binary_trees_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2005/test/subpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/subpools/binary_trees_ada2005.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr");
               end case;

            when "All" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2005/test/subpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/bounded_binary_trees_ada2005.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2005/test/subpools/binary_trees_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/binary_trees_ada2005.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2005/test/subpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/subpools/binary_trees_ada2005.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/nosubpools/binary_trees_ada2005.gpr");
               end case;
         end case;

      when "Ada2012" =>
         case Variant is
            when "Basic" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/bounded_binary_trees_ada2012.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/binary_trees_ada2012.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/nosubpools/binary_trees_ada2012.gpr");
               end case;

            when "Subpools" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2012/test/subpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2012/test/subpools/binary_trees_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2012/test/subpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/subpools/binary_trees_ada2012.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr");
               end case;

            when "All" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2012/test/subpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/bounded_binary_trees_ada2012.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2012/test/subpools/binary_trees_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/binary_trees_ada2012.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2012/test/subpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/subpools/binary_trees_ada2012.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/nosubpools/binary_trees_ada2012.gpr");
               end case;
         end case;

      when "Ada2022" =>
         case Variant is
            when "Basic" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/bounded_binary_trees_ada2022.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/binary_trees_ada2022.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/nosubpools/binary_trees_ada2022.gpr");
               end case;

            when "Subpools" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2022/test/subpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2022/test/subpools/binary_trees_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2022/test/subpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/subpools/binary_trees_ada2022.gpr",
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr");
               end case;

            when "All" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2022/test/subpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/bounded_binary_trees_ada2022.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2022/test/subpools/binary_trees_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/binary_trees_ada2022.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2022/test/subpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/subpools/binary_trees_ada2022.gpr",
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/nosubpools/binary_trees_ada2022.gpr");
               end case;
            end case;

      when "All" =>
         case Variant is
            when "Basic" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/bounded_binary_trees_ada2022.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/bounded_binary_trees_ada2012.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/bounded_binary_trees_ada95.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/bounded_binary_trees_ada2005.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/binary_trees_ada2022.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/binary_trees_ada2012.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/binary_trees_ada95.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/binary_trees_ada2005.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/nosubpools/binary_trees_ada2022.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/nosubpools/binary_trees_ada2012.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/nosubpools/binary_trees_ada95.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/nosubpools/binary_trees_ada2005.gpr");
               end case;

            when "Subpools" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2022/test/subpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2012/test/subpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./95/test/subpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./2005/test/subpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2022/test/subpools/binary_trees_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2012/test/subpools/binary_trees_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./95/test/subpools/binary_trees_ada95.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./2005/test/subpools/binary_trees_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2022/test/subpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/subpools/binary_trees_ada2022.gpr",
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2012/test/subpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/subpools/binary_trees_ada2012.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./95/test/subpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/subpools/binary_trees_ada95.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./2005/test/subpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/subpools/binary_trees_ada2005.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr");
               end case;

            when "All" =>
               case Bounds is

                  when "Bounded" =>
                     for Project_Files use (
                       "./2022/test/subpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/bounded_binary_trees_ada2022.gpr",
                       "./2012/test/subpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/bounded_binary_trees_ada2012.gpr",
                       "./95/test/subpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/bounded_binary_trees_ada95.gpr",
                       "./2005/test/subpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/bounded_binary_trees_ada2005.gpr");

                  when "Unbounded" =>
                     for Project_Files use (
                       "./2022/test/subpools/binary_trees_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/binary_trees_ada2022.gpr",
                       "./2012/test/subpools/binary_trees_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/binary_trees_ada2012.gpr",
                       "./95/test/subpools/binary_trees_ada95.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/binary_trees_ada95.gpr",
                       "./2005/test/subpools/binary_trees_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/binary_trees_ada2005.gpr");

                  when "All" =>
                     for Project_Files use (
                       "./2022/test/subpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/subpools/binary_trees_ada2022.gpr",
                       "./2022/test/test_bounded_dynamic_pools_ada2022.gpr",
                       "./2022/test/test_dynamic_pools_ada2022.gpr",
                       "./2022/test/nosubpools/bounded_binary_trees_ada2022.gpr",
                       "./2022/test/nosubpools/binary_trees_ada2022.gpr",
                       "./2012/test/subpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/subpools/binary_trees_ada2012.gpr",
                       "./2012/test/test_bounded_dynamic_pools_ada2012.gpr",
                       "./2012/test/test_dynamic_pools_ada2012.gpr",
                       "./2012/test/nosubpools/bounded_binary_trees_ada2012.gpr",
                       "./2012/test/nosubpools/binary_trees_ada2012.gpr",
                       "./95/test/subpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/subpools/binary_trees_ada95.gpr",
                       "./95/test/test_dynamic_pools_ada95.gpr",
                       "./95/test/test_bounded_dynamic_pools_ada95.gpr",
                       "./95/test/nosubpools/bounded_binary_trees_ada95.gpr",
                       "./95/test/nosubpools/binary_trees_ada95.gpr",
                       "./2005/test/subpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/subpools/binary_trees_ada2005.gpr",
                       "./2005/test/test_bounded_dynamic_pools_ada2005.gpr",
                       "./2005/test/test_dynamic_pools_ada2005.gpr",
                       "./2005/test/nosubpools/bounded_binary_trees_ada2005.gpr",
                       "./2005/test/nosubpools/binary_trees_ada2005.gpr");
               end case;
         end case;      
   end case;

end Deepend;
